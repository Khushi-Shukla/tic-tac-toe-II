{"version":3,"sources":["tictactoe.png","App.js","reportWebVitals.js","index.js"],"names":["Square","props","className","isWinning","onClick","value","Row","state","squares","Array","fill","xIsNext","i","val","cells","this","winnerCell","includes","items","push","renderSquare","React","Component","calculateWinner","lines","length","a","b","c","player","line","App","history","stepNumber","slice","setState","concat","step","msg","current","winner","console","log","moves","map","move","desc","jumpTo","handleClick","restart","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc857998.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/tictactoe.c909fbef.png\";","import React from 'react';\r\nimport logo from './tictactoe.png'\r\nimport './App.css'\r\n\r\n function Square(props){\r\n   return (\r\n   <button className={\"btn1\"+(props.isWinning?\" winner\":null)}  onClick={()=>{props.onClick()}}>\r\n     <h1>{props.value}</h1>\r\n   </button>\r\n   );\r\n }\r\n\r\n class Row extends React.Component{\r\n   constructor(props){\r\n     super(props);\r\n     this.state={\r\n       squares: Array(9).fill(null),\r\n       xIsNext: true,\r\n     }\r\n   }\r\n\r\n  renderSquare(i){\r\n    let val;\r\n    const cells=this.props.winnerCell;\r\n    if(cells)\r\n      val=cells.includes(i);\r\n    else\r\n    val=null\r\n  \r\n     return <Square isWinning={val}  value={this.props.squares[i]} onClick={()=>this.props.onClick(i)}  />;\r\n   }\r\n   render(){\r\n     const items=[];\r\n     for(let i=1;i<10;i++){\r\n       items.push(this.renderSquare(i));\r\n     }\r\n\r\n   return(\r\n     <div>\r\n        {items}\r\n     </div>\r\n    );\r\n   }\r\n }\r\n\r\n class App extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      history:[{\r\n        squares: Array(9).fill(null)\r\n      }],\r\n      xIsNext: true,\r\n      stepNumber: 0,\r\n    }\r\n  }\r\n\r\n  \r\n  handleClick(i){\r\n    const history=this.state.history.slice(0, this.state.stepNumber+1);\r\n    const current=history[history.length-1]\r\n    const squares=current.squares.slice();\r\n    if(calculateWinner(squares) || squares[i]){\r\n      return;\r\n    }\r\n    squares[i]=this.state.xIsNext?'X': 'O';\r\n    this.setState({\r\n      history: history.concat([{\r\n        squares:squares\r\n      }]), \r\n      xIsNext:!this.state.xIsNext,\r\n      stepNumber: history.length\r\n    });\r\n   }\r\n\r\n   restart(){\r\n    this.setState({ history:[{squares: Array(9).fill(null)}], stepNumber: 0, xIsNext:true})\r\n   }\r\n\r\n   jumpTo(step){\r\n     this.setState({\r\n       stepNumber:step,\r\n       xIsNext:(step%2)===0\r\n     })\r\n   }\r\n\r\n   render(){\r\n    const history=this.state.history;\r\n    const current=history[this.state.stepNumber]\r\n    const winner = calculateWinner(current.squares);\r\n    console.log(history.length);\r\n    let msg;\r\n    \r\n    if(winner){\r\n        msg=\"Winner is: \"+winner.player+\" @ \"+winner.line;\r\n    }\r\n    else if(history.length===10)\r\n    msg=\"Game Draw\";\r\n    else\r\n        msg=\"Next turn: \"+(this.state.xIsNext?\"X\":\"O\");\r\n     \r\n\r\n    const moves=history.map((step, move)=>{\r\n      const desc= move?\"Go to step #\"+move:\"Go to start\";\r\n      return(\r\n        <li key={move}>\r\n          <button className=\"label\" onClick={()=>this.jumpTo(move)}>{desc}</button>\r\n        </li>\r\n      );\r\n    })\r\n\r\n    \r\n    return(\r\n      \r\n      <div >\r\n        {/* <img className=\"center\" src={logo} width='100' height='100' alt='game' /> */}\r\n        \r\n        <div className=\"container\">\r\n        <div><h1>{msg}</h1></div>\r\n        <Row winnerCell={winner?winner.line:null} squares={current.squares} onClick={(i)=>this.handleClick(i)}  />\r\n        <div className=\"left\">\r\n          <button className=\"btn\" onClick={()=> this.restart()}><span>Restart</span></button>\r\n        </div>\r\n\r\n        <div className=\"right\">{moves}</div>\r\n        </div>\r\n        \r\n      </div>\r\n      \r\n    );\r\n   }\r\n   }\r\n   function calculateWinner(squares){\r\n     const lines=[\r\n       [1,2,3],\r\n       [4,5,6],\r\n       [7,8,9],\r\n       [1,4,7],\r\n       [2,5,8],\r\n       [3,6,9],\r\n       [1,5,9],\r\n       [3,5,7],\r\n     ];\r\n     for(let i=0;i<lines.length;i++){\r\n       const[a,b,c]=lines[i];\r\n       if(squares[a] && squares[a]===squares[b] && squares[a]===squares[c]){\r\n       return {player:squares[a], line:[a,b,c]};\r\n       }\r\n     }\r\n     return null;\r\n   }\r\n\r\n  \r\n export default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}